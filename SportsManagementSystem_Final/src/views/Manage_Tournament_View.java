/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import controllers.Game_Controller;
import controllers.Tournament_Controller;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import models.Game_Model;
import models.Tournament_Model;

/**
 *
 * @author MANALI
 */
public class Manage_Tournament_View extends javax.swing.JFrame {

    /**
     * Creates new form Manage_Tournament_View
     */
    
    public Tournament_Controller controller = null;
    public Game_Controller gcontroller = null;
    DateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd");
    Date date;
    String dateString = dateFormat.format(new Date());
    private int user_id;
    
    public Manage_Tournament_View() {
        controller = new Tournament_Controller();
        gcontroller = new Game_Controller();
        controller.tourform = this;
        gcontroller.tourform = this;
        initComponents();
        this.setLocationRelativeTo(null);
    }
    
    public Manage_Tournament_View(int uid) {
        controller = new Tournament_Controller();
        gcontroller = new Game_Controller();
        controller.tourform = this;
        gcontroller.tourform = this;
        user_id = uid;
        initComponents();
        this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        btn_back = new javax.swing.JButton();
        btn_logout = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        add_tournament_name = new javax.swing.JTextField();
        add_tournament_venue = new javax.swing.JTextField();
        add_tournament_start_date = new org.jdesktop.swingx.JXDatePicker();
        add_tournament_end_date = new org.jdesktop.swingx.JXDatePicker();
        btn_add_tournament = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        add_tournament_game = new javax.swing.JComboBox();
        jPanel2 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        update_tournament_venue = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        update_tournament_start_date = new org.jdesktop.swingx.JXDatePicker();
        jLabel11 = new javax.swing.JLabel();
        update_tournament_end_date = new org.jdesktop.swingx.JXDatePicker();
        jLabel12 = new javax.swing.JLabel();
        update_tournament_game = new javax.swing.JComboBox();
        update_tournament_name = new javax.swing.JComboBox();
        btn_update_tournament = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel13 = new javax.swing.JLabel();
        delete_tournament_name = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        delete_tournament_venue = new javax.swing.JTextField();
        delete_tournament_start_date = new org.jdesktop.swingx.JXDatePicker();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        delete_tournament_end_date = new org.jdesktop.swingx.JXDatePicker();
        jLabel17 = new javax.swing.JLabel();
        btn_delete_tournament = new javax.swing.JButton();
        delete_tournament_game = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Andalus", 1, 24)); // NOI18N
        jLabel1.setText("Sports Management System");

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));

        btn_back.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_back.setText("Back");
        btn_back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backActionPerformed(evt);
            }
        });

        btn_logout.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_logout.setText("Logout");
        btn_logout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_logoutActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Constantia", 0, 18)); // NOI18N
        jLabel2.setText("Manage & View Tournaments");

        jTabbedPane1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTabbedPane1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jTabbedPane1StateChanged(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel3.setText("Name:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel4.setText("Venue:");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel5.setText("Start Date:");

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel6.setText("End Date:");

        add_tournament_start_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_tournament_start_dateActionPerformed(evt);
            }
        });

        add_tournament_end_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_tournament_end_dateActionPerformed(evt);
            }
        });

        btn_add_tournament.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_add_tournament.setText("Add Tournament Details");
        btn_add_tournament.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_add_tournamentActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel7.setText("Game:");

        add_tournament_game.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        add_tournament_game.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                add_tournament_gameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7))
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btn_add_tournament)
                    .addComponent(add_tournament_name)
                    .addComponent(add_tournament_venue)
                    .addComponent(add_tournament_start_date, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(add_tournament_end_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(add_tournament_game, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(add_tournament_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_tournament_venue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_tournament_start_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_tournament_end_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(add_tournament_game, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addComponent(btn_add_tournament)
                .addGap(35, 35, 35))
        );

        jTabbedPane1.addTab("Add Tournament", jPanel1);

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel8.setText("Name:");

        jLabel9.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel9.setText("Venue:");

        jLabel10.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel10.setText("Start Date:");

        update_tournament_start_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_tournament_start_dateActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel11.setText("End Date:");

        update_tournament_end_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_tournament_end_dateActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel12.setText("Game:");

        update_tournament_game.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        update_tournament_game.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_tournament_gameActionPerformed(evt);
            }
        });

        update_tournament_name.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        update_tournament_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                update_tournament_nameActionPerformed(evt);
            }
        });

        btn_update_tournament.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_update_tournament.setText("Update Tournament Details");
        btn_update_tournament.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_update_tournamentActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9)
                    .addComponent(jLabel10)
                    .addComponent(jLabel11)
                    .addComponent(jLabel12))
                .addGap(60, 60, 60)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(update_tournament_venue)
                    .addComponent(update_tournament_start_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(update_tournament_end_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(update_tournament_game, 0, 230, Short.MAX_VALUE)
                    .addComponent(update_tournament_name, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap(157, Short.MAX_VALUE)
                .addComponent(btn_update_tournament)
                .addGap(151, 151, 151))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel8)
                    .addComponent(update_tournament_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update_tournament_venue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update_tournament_start_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel10))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update_tournament_end_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(update_tournament_game, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12))
                .addGap(27, 27, 27)
                .addComponent(btn_update_tournament)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Update Tournament", jPanel2);

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel13.setText("Name:");

        delete_tournament_name.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        delete_tournament_name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_tournament_nameActionPerformed(evt);
            }
        });

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel14.setText("Venue:");

        delete_tournament_venue.setEditable(false);

        delete_tournament_start_date.setEditable(false);
        delete_tournament_start_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_tournament_start_dateActionPerformed(evt);
            }
        });

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel15.setText("Start Date:");

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel16.setText("End Date:");

        delete_tournament_end_date.setEditable(false);
        delete_tournament_end_date.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delete_tournament_end_dateActionPerformed(evt);
            }
        });

        jLabel17.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLabel17.setText("Game:");

        btn_delete_tournament.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        btn_delete_tournament.setText("Delete Tournament Details");
        btn_delete_tournament.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_delete_tournamentActionPerformed(evt);
            }
        });

        delete_tournament_game.setEditable(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(jLabel14)
                    .addComponent(jLabel15)
                    .addComponent(jLabel16)
                    .addComponent(jLabel17))
                .addGap(60, 60, 60)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(delete_tournament_venue)
                    .addComponent(delete_tournament_start_date, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE)
                    .addComponent(delete_tournament_end_date, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete_tournament_name, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(delete_tournament_game))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(161, Short.MAX_VALUE)
                .addComponent(btn_delete_tournament)
                .addGap(151, 151, 151))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel13)
                    .addComponent(delete_tournament_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete_tournament_venue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel14))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete_tournament_start_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(delete_tournament_end_date, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(delete_tournament_game, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(btn_delete_tournament)
                .addContainerGap(37, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Delete Tournament", jPanel3);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(btn_back, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btn_logout, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27))
            .addGroup(layout.createSequentialGroup()
                .addGap(111, 111, 111)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jTabbedPane1)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jSeparator1, javax.swing.GroupLayout.DEFAULT_SIZE, 516, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_back)
                    .addComponent(btn_logout)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addComponent(jTabbedPane1)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGap(57, 57, 57)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(393, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backActionPerformed
        // TODO add your handling code here:
        Coordinator_View coordinator = new Coordinator_View();
        coordinator.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_backActionPerformed

    private void btn_logoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_logoutActionPerformed
        // TODO add your handling code here:
        Login_View login=new Login_View();
        login.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btn_logoutActionPerformed

    private void jTabbedPane1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jTabbedPane1StateChanged
        // TODO add your handling code here:
        JTabbedPane sourceTabbedPane = (JTabbedPane) evt.getSource();
        int index = sourceTabbedPane.getSelectedIndex();
        System.out.println("Tab changed to: " + sourceTabbedPane.getTitleAt(index));
        paneChangedSetUI(index);
    }//GEN-LAST:event_jTabbedPane1StateChanged

    private void btn_delete_tournamentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_delete_tournamentActionPerformed
        // TODO add your handling code here:
        deleteTournament();
    }//GEN-LAST:event_btn_delete_tournamentActionPerformed

    private void delete_tournament_end_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_tournament_end_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_tournament_end_dateActionPerformed

    private void delete_tournament_start_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_tournament_start_dateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_delete_tournament_start_dateActionPerformed

    private void delete_tournament_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delete_tournament_nameActionPerformed
        // TODO add your handling code here:
        deleteTournamentSetUI();
    }//GEN-LAST:event_delete_tournament_nameActionPerformed

    private void btn_update_tournamentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_update_tournamentActionPerformed
        // TODO add your handling code here:
        String u_tour_name = update_tournament_name.getSelectedItem().toString();
        String u_tour_venue = update_tournament_venue.getText();
        Date u_tour_start_date = update_tournament_start_date.getDate();
        Date u_tour_end_date = update_tournament_end_date.getDate();
        Game_Model game_name = (Game_Model)update_tournament_game.getSelectedItem();
        int u_game_id = game_name.getGame_id();

        try{
            u_tour_start_date = dateFormat.parse(dateFormat.format(u_tour_start_date));
            u_tour_end_date = dateFormat.parse(dateFormat.format(u_tour_end_date));
        }
        catch(ParseException pe){
            pe.printStackTrace();
        }

        if(this.validateUpdateTournamentForm(u_tour_name, u_tour_venue, u_tour_start_date, u_tour_end_date)){
            controller.updateTournament(u_tour_name,u_tour_venue,u_tour_start_date,u_tour_end_date,u_game_id);
        }
    }//GEN-LAST:event_btn_update_tournamentActionPerformed

    private void update_tournament_nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_tournament_nameActionPerformed
        // TODO add your handling code here:
        updateTournamentSetUI();
    }//GEN-LAST:event_update_tournament_nameActionPerformed

    private void update_tournament_gameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_tournament_gameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_update_tournament_gameActionPerformed

    private void update_tournament_end_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_tournament_end_dateActionPerformed
        // TODO add your handling code here:
        update_tournament_end_date.setFormats(dateFormat);
    }//GEN-LAST:event_update_tournament_end_dateActionPerformed

    private void update_tournament_start_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_update_tournament_start_dateActionPerformed
        // TODO add your handling code here:
        update_tournament_start_date.setFormats(dateFormat);
    }//GEN-LAST:event_update_tournament_start_dateActionPerformed

    private void add_tournament_gameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_tournament_gameActionPerformed
        // TODO add your handling code here:
        //addTournamentGameSetUI();
    }//GEN-LAST:event_add_tournament_gameActionPerformed

    private void btn_add_tournamentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_add_tournamentActionPerformed
        // TODO add your handling code here:
        String tour_name = add_tournament_name.getText();
        String tour_venue = add_tournament_venue.getText();
        Date tour_start_date = add_tournament_start_date.getDate();
        Date tour_end_date = add_tournament_end_date.getDate();
        Game_Model game_name = (Game_Model)add_tournament_game.getSelectedItem();
        int game_id = game_name.getGame_id();

        try{
            tour_start_date = dateFormat.parse(dateFormat.format(tour_start_date));
            tour_end_date = dateFormat.parse(dateFormat.format(tour_end_date));
        }
        catch(ParseException pe){
            pe.printStackTrace();
        }

        if(this.validateAddTournamentForm(tour_name, tour_venue, tour_start_date, tour_end_date)){
            controller.addTournament(tour_name,tour_venue,tour_start_date,tour_end_date,game_id);
        }
    }//GEN-LAST:event_btn_add_tournamentActionPerformed

    private void add_tournament_end_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_tournament_end_dateActionPerformed
        // TODO add your handling code here:
        add_tournament_end_date.setFormats(dateFormat);
    }//GEN-LAST:event_add_tournament_end_dateActionPerformed

    private void add_tournament_start_dateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_add_tournament_start_dateActionPerformed
        // TODO add your handling code here:
        add_tournament_start_date.setFormats(dateFormat);
    }//GEN-LAST:event_add_tournament_start_dateActionPerformed

    private void paneChangedSetUI(int index){
        switch(index){
            case 0:
                add_tournament_name.setText("");
                add_tournament_venue.setText("");
                try{
                    add_tournament_start_date.setFormats(dateFormat);
                    add_tournament_start_date.setDate(dateFormat.parse(dateString));
                    add_tournament_end_date.setFormats(dateFormat);
                    add_tournament_end_date.setDate(dateFormat.parse(dateString));
                }
                catch(ParseException pe){
                    pe.printStackTrace();
                }
                List<Game_Model> games = gcontroller.getAllGames();
                if(!games.isEmpty()){
                    add_tournament_game.removeAllItems();
                    for(Game_Model game: games){
                        add_tournament_game.addItem(game);
                    }
                }               
                break;
                
            case 1:
                List<Tournament_Model> tournaments = controller.getAllTournaments();
                update_tournament_name.removeAllItems();
                if(!tournaments.isEmpty()){                    
                    for(Tournament_Model tournament: tournaments){
                        update_tournament_name.addItem(tournament);
                    }
                }
                break;
                
            case 2:
                List<Tournament_Model> tournaments2 = controller.getAllTournaments();
                delete_tournament_name.removeAllItems();
                if(!tournaments2.isEmpty()){                    
                    for(Tournament_Model tournament2: tournaments2){
                        delete_tournament_name.addItem(tournament2);
                    }
                }
                break;
                
            case 3:
                break;               
        }      
    }
    
    private boolean validateAddTournamentForm(String tour_name, String tour_venue, Date start_date, Date end_date){
        Date currDate = new Date();
        try{
            currDate = dateFormat.parse(dateFormat.format(new Date()));
        }
        catch(ParseException pe){
            pe.printStackTrace();
        }
        if(tour_name.equals("")){
            this.showMsg("Tournament name is empty");
            return false;
        }
        if(tour_venue.equals("")){
            this.showMsg("Tournament venue is empty");
            return false;
        }
        if(start_date.before(currDate)){
            this.showMsg("Tournament start date cannot be below current date");
            return false;
        }
        if(end_date.before(start_date)){
            this.showMsg("Tournament end date cannot be below start date");
            return false;
        }
        return true;
    }
    
    private boolean validateUpdateTournamentForm(String tour_name, String tour_venue, Date start_date, Date end_date){
        Date currDate = new Date();
        try{
            currDate = dateFormat.parse(dateFormat.format(new Date()));
        }
        catch(ParseException pe){
            pe.printStackTrace();
        }
        if(tour_name.equals("")){
            this.showMsg("Tournament name is empty");
            return false;
        }
        if(tour_venue.equals("")){
            this.showMsg("Tournament venue is empty");
            return false;
        }
        return true;
    }

    private void updateTournamentSetUI(){
        Tournament_Model selected_tournament = (Tournament_Model)update_tournament_name.getSelectedItem();
        if(selected_tournament == null){
            return;
        }
        List<Game_Model> games=Game_Model.getAllGames();
        update_tournament_game.removeAllItems();
        int size=games.size();int i=0;
        for(i=0;i<size;i++){
            update_tournament_game.addItem(games.get(i));
            if(games.get(i).getGame_id()==selected_tournament.getGame_id()){
                update_tournament_game.setSelectedIndex(i);
            }
        }
        update_tournament_venue.setText(selected_tournament.getTournament_venue());
        update_tournament_start_date.setFormats(dateFormat);
        update_tournament_start_date.setDate(selected_tournament.getTournament_start_date());
        update_tournament_end_date.setFormats(dateFormat);
        update_tournament_end_date.setDate(selected_tournament.getTournament_end_date());
    }
    
    private void deleteTournamentSetUI(){
        Tournament_Model selected_tournament = (Tournament_Model)delete_tournament_name.getSelectedItem();
        if(selected_tournament == null){
            return;
        }
        delete_tournament_game.setText(Game_Model.getGameById(selected_tournament.getGame_id()).getGame_name());
        delete_tournament_venue.setText(selected_tournament.getTournament_venue());
        delete_tournament_start_date.setFormats(dateFormat);
        delete_tournament_start_date.setDate(selected_tournament.getTournament_start_date());
        delete_tournament_end_date.setFormats(dateFormat);
        delete_tournament_end_date.setDate(selected_tournament.getTournament_end_date());
    }
    private void deleteTournament() {
         Tournament_Model tourament=(Tournament_Model)delete_tournament_name.getSelectedItem();
         controller.deleteTournament(tourament);
         List<Tournament_Model> tournaments2 = controller.getAllTournaments();
        delete_tournament_name.removeAllItems();
        if(!tournaments2.isEmpty()){                    
            for(Tournament_Model tournament2: tournaments2){
                delete_tournament_name.addItem(tournament2);
            }
        }
    }
     public void showMsg(String msg) {
        JOptionPane.showMessageDialog(null, msg);
    }
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Manage_Tournament_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Manage_Tournament_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Manage_Tournament_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Manage_Tournament_View.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Manage_Tournament_View().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private org.jdesktop.swingx.JXDatePicker add_tournament_end_date;
    private javax.swing.JComboBox add_tournament_game;
    private javax.swing.JTextField add_tournament_name;
    private org.jdesktop.swingx.JXDatePicker add_tournament_start_date;
    private javax.swing.JTextField add_tournament_venue;
    private javax.swing.JButton btn_add_tournament;
    private javax.swing.JButton btn_back;
    private javax.swing.JButton btn_delete_tournament;
    private javax.swing.JButton btn_logout;
    private javax.swing.JButton btn_update_tournament;
    private org.jdesktop.swingx.JXDatePicker delete_tournament_end_date;
    private javax.swing.JTextField delete_tournament_game;
    private javax.swing.JComboBox delete_tournament_name;
    private org.jdesktop.swingx.JXDatePicker delete_tournament_start_date;
    private javax.swing.JTextField delete_tournament_venue;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private org.jdesktop.swingx.JXDatePicker update_tournament_end_date;
    private javax.swing.JComboBox update_tournament_game;
    private javax.swing.JComboBox update_tournament_name;
    private org.jdesktop.swingx.JXDatePicker update_tournament_start_date;
    private javax.swing.JTextField update_tournament_venue;
    // End of variables declaration//GEN-END:variables

    
}
